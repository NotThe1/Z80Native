;     File created by MakeZ80Source on Wed Apr 03 09:56:26 EDT 2019 from:
;     C:\Z80_Native\Submit.asm
;Source File name - SUBMIT.COM
;Generated by - ManualDisassembler V A.0 on Tue Apr 02 16:43:38 EDT 2019

NULL       EQU     00H        ; Null
SOH        EQU     01H        ; Start of Heading
BELL       EQU     07H        ; Bell
LF         EQU     0AH        ; Line Feed
CR         EQU     0DH        ; Carriage Return
DOLLAR     EQU     24H        ; Dollar Sign
QMARK      EQU     3FH        ; Question Mark

WBOOT			EQU		0000	; Vector to warm Boot
BDOS			EQU		0005	; Vector to OS
FCB1			EQU		05CH
FCB1TYPE		EQU		065H	; Type in fcb1
COMTAIL			EQU		080H
COMTAILCOUNT	EQU     COMTAIL
COMTAILCHARS	EQU		COMTAILCOUNT + 1

scPrintString	EQU		09H
scOpenFile		EQU		0FH
scCloseFile		EQU		10H
scDeleteFile	EQU		13H
scReadSeq		EQU		14H
scWriteSeq		EQU		15H
scMakeFile		EQU		16H

            ORG  0100H


;     <New code fragment-----from 0100 to 0102 ( 102 :  258)>
;              ORG 0100H
          JP  Start

;     <New unknown fragment-----from 0103 to 01DE ( 1DE :  478)>
;              ORG 0103H
;;               DS 0DCH
msg0:	DB	' copyright(c) 1977  digital research '
LFCR:	DB	0AH,0DH,'$'
msg1:	DB	'Error On Line $'
txtSUB:	DB	'SUB'
msg2:	DB	'No  SUB  File Present$'
msg3:	DB	'Disk Write Error$'
msg4:	DB	'Command Buffer Overflow$'
msg5:	DB	'Command Too Long$'
msg6:	DB	'Parameter Error$'
msg7:	DB	'Invalid Control Character$'
msg8:	DB	'Directory Full$'
msg9:	DB	'Cannot Close  Read/Only?$'


;     <New code fragment-----from 01DF to 01F6 ( 1F6 :  502)>
;              ORG 01DFH
Start:
          LD  HL,000H
          ADD  HL,SP
          LD (CallerSP),HL				; Save callers SP
          LD  HL,TopOfStack
          LD	SP,HL					; Set our stack
          CALL GrabComTail
          CALL 038AH
          CALL 04FEH
          CALL jpWBOOT
          RET

;     <New code fragment-----from 01F7 to 0206 ( 206 :  518)>
;              ORG  01F7H
;L01F7:
printBC:
          LD  HL,05DDH					; Set up HL to store BC
          LD  (HL),B					; Save MSB of message pointer
          DEC  HL
          LD  (HL),C       				; Save LSB of Message buffer
          LD HL,(05DCH)					; get what we just saved
          EX	DE,HL					; put it into DE
          LD  C,scPrintString
          CALL jpBDOS1					; Go print it
          RET

;     <New code fragment-----from 0207 to 0219 ( 219 :  537)>
;              ORG  0207H
L0207:
openBC:
;Called with BC = FCB of file to open
          LD  HL,05E0H					; Set up HL to store BC
          LD  (HL),B					; Save MSB of FCB
          DEC  HL
          LD  (HL),C       				; Save LSB of FCB
          LD HL,(05DFH)					; get what we just saved
          EX	DE,HL					; put it into DE
          LD  C,scOpenFile
          CALL jpBDOS2					; Open the file
          LD  (osStatus),A				; Save the return status
          RET

;     <New code fragment-----from 021A to 022C ( 22C :  556)>
;              ORG  021AH
L021A:
          LD  HL,05E2H
          LD  (HL),B
          DEC  HL
          LD  (HL),C
          LD HL,(05E1H)
          EX	DE,HL
          LD  C,scCloseFile
          CALL jpBDOS2
          LD  (osStatus),A
          RET

;     <New code fragment-----from 022D to 023C ( 23C :  572)>
;              ORG  022DH
L022D:
          LD  HL,05E4H
          LD  (HL),B
          DEC  HL
          LD  (HL),C
          LD HL,(05E3H)
          EX	DE,HL
          LD  C,scDeleteFile
          CALL jpBDOS1
          RET

;     <New code fragment-----from 023D to 024C ( 24C :  588)>
;              ORG  023DH
L023D:
          LD  HL,05E6H
          LD  (HL),B
          DEC  HL
          LD  (HL),C
          LD HL,(05E5H)
          EX	DE,HL
          LD  C,scReadSeq
          CALL jpBDOS2
          RET

;     <New code fragment-----from 024D to 025C ( 25C :  604)>
;              ORG  024DH
L024D:
          LD  HL,05E8H
          LD  (HL),B
          DEC  HL
          LD  (HL),C
          LD HL,(05E7H)
          EX	DE,HL
          LD  C,scWriteSeq
          CALL jpBDOS2
          RET

;     <New code fragment-----from 025D to 026F ( 26F :  623)>
;              ORG  025DH
L025D:
          LD  HL,05EAH
          LD  (HL),B
          DEC  HL
          LD  (HL),C
          LD HL,(05E9H)
          EX	DE,HL
          LD  C,scMakeFile
          CALL jpBDOS2
          LD  (osStatus),A
          RET

;     <New code fragment-----from 0270 to 02A5 ( 2A5 :  677)>
;              ORG  0270H
;L0270:
;--------------------   Move Data    -------------------------------
MoveData:
; called with E  = Length.
;             BC = Destination
;             On Stack = Source
;
          LD  HL,movSize				; Size location Pointer
          LD  (HL),E					; Save size
          DEC  HL         				; Destination location pointer
          LD  (HL),B					; Save location MSB
          DEC  HL
          LD  (HL),C					; Save location LSB
          DEC  HL						; Source  Location Pointer
          POP  DE						; Temporary get past return address
          POP  BC						; Retrieve Source location
          LD  (HL),B					; Save location MSB
          DEC  HL
          LD  (HL),C       				; Save location LSB
          PUSH DE						; Restore return address to stack
MoveData1:
          LD   A,(movSize)				; Get the length
          DEC  A						; Adjust count
          LD  (movSize),A				; Put back
          CP  0FFH						; Did it go to Zero ?
          JP	Z,DumbRet				; Return if yes

          LD HL,(movSrc)
          PUSH HL
          LD HL,(movDest)
          POP  BC
          LD A,(BC)						; Get byte from Source
          LD  (HL),A       				; Put into Destination
          LD HL,(movSrc)
          INC  HL						; Update pointers
          LD (movSrc),HL
          LD HL,(movDest)
          INC  HL
          LD (movDest),HL
          JP  MoveData1

;L02A6:
DumbRet:
          RET
;--------------------   Move Data    -------------------------------

;     <New code fragment-----from 02A7 to 02CB ( 2CB :  715)>
;              ORG  02A7H
;L02A7:
errorExit:
; entered with BC -> String message
          LD  HL,05F3H					; Set up HL to store BC
          LD  (HL),B					; Save MSB of message pointer
          DEC  HL
          LD  (HL),C       				; Save LSB of Message buffer
          LD  BC,LFCR
          CALL printBC					; Print New line
          LD  BC,msg1
          CALL printBC					; Print Error message on line xx
          LD  BC,LineNumber
          CALL printBC					; Print Line Number
          LD HL,(05F2H)
          LD  B,H
          LD  C,L						; Get original error message
          CALL printBC					; Print it
          LD HL,(CallerSP)
          LD	SP,HL 					; Restore the users stack
          RET

;     <New code fragment-----from 02CC to 0308 ( 308 :  776)>
;              ORG  02CCH
L02CC:
GrabComTail:
          LD  BC,COMTAILCHARS			; comtail$chars
          PUSH BC
          LD  E,07FH					; comtail max size
          LD  BC,comTailTemp
          CALL MoveData
          LD HL,(COMTAILCOUNT)			; comtailCount
          LD  H,00H						; HL = Comtail count
          LD  BC,comTailTemp			; start of tail temp
          ADD  HL,BC					; end of tail temp
          LD  (HL),00H					; Terminate tail with 00
          LD  BC,txtSUB					; Point at String SUB (source)
          PUSH BC						; Save for MoveData
          LD  E,03H    					; Load string size
          LD  BC,FCB1TYPE				; Point at destination
          CALL MoveData					; Insure FCB1 is type SUB
          LD  BC,FCB1					; Point to FCB for the SUB file
          CALL openBC					; Open the file
          LD   A,(osStatus)				; Get the return status
          CP  0FFH						; Was it successful ?
          JP	NZ,GrabComTail1			;  skip if yes
          LD  BC,msg2					; Load error message
          CALL errorExit				; exit via error
GrabComTail1:
          LD  HL,flag1
          LD  (HL),080H					; Store 80H in the flag1   
          RET

;     <New code fragment-----from 0309 to 031F ( 31F :  799)>
;              ORG  0309H
L0309:
          LD  A,07FH
          LD  HL,flag1
          CP  M							; Is Flag1 value > Acc ?
          JP	NC,0325H				; skip if not
          LD  BC,FCB1
          CALL 023DH
          CP  00H
          JP	Z,0320H
          LD  A,01AH
          RET

;     <New code fragment-----from 0320 to 0377 ( 377 :  887)>
;              ORG  0320H
L0320:
          LD  HL,flag1
          LD  (HL),00H					; Store 00 in flag1
L0325:
          LD   A,(flag1)				; Get flag1 value
          INC  A						; Increment it
          LD  (flag1),A					; And put it back
          DEC  A						; Restore flag1s original value
          LD  C,A
          LD  B,00H
          LD  HL,0080H					;#? COMTAILCOUNT
          ADD  HL,BC
          LD  A,(HL)
          LD  (0675H),A
          CP  0DH
          JP	NZ,0362H
          LD   A,(05B8H)
          INC  A
          LD  (05B8H),A
          LD  C,A
          LD  A,039H
          CP  C
          JP	NC,0362H
          LD  HL,05B8H
          LD  (HL),030H
          DEC  HL
          LD  A,(HL)
          INC  A
          LD  (HL),A
          LD  C,A
          LD  A,039H
          CP  C
          JP	NC,0362H
          LD  HL,05B7H
          LD  (HL),030H
          DEC  HL
          INC  M
L0362:
          LD   A,(0675H)
          SUB  061H
          CP  01AH
          JP	NC,0374H
          LD   A,(0675H)
          AND  05FH
          LD  (0675H),A
L0374:
          LD   A,(0675H)
          RET

;     <New code fragment-----from 0378 to 0389 ( 389 :  905)>
;              ORG  0378H
L0378:
          LD  BC,fcbSUB
          CALL 024DH
          CP  00H
          JP	Z,0389H
          LD  BC,msg3
          CALL errorExit				; exit via error
L0389:
          RET

;     <New code fragment-----from 038A to 03E5 ( 3E5 :  997)>
;              ORG  038AH
L038A:
          LD  HL,0676H
          LD  (HL),00H					;#? Set to 00
          LD  HL,0000H
          LD (0E76H),HL 				;#? Set to 0000
          LD  HL,0E7CH
          LD  (HL),01H 					;#? Set to 01
L039A:
          LD   A,(0E7CH)				; Get value #?
          RRA							; LSB Set
          JP	NC,DumbRet1				; RET if not
          LD  HL,0E78H
          LD  (HL),00H					; Set to 0000 #?
L03A6:
          CALL 0309H
          LD  (0E7DH),A
          SUB  01AH
          ADD	A,0FFH
          SBC  A,A
          PUSH AF
          LD   A,(0E7DH)
          SUB  0DH
          ADD	A,0FFH
          SBC  A,A
          POP  BC
          LD  C,B
          AND  C
          RRA
          JP	NC,046BH
          LD   A,(0E7DH)
          CP  0AH
          JP	Z,0468H
          LD   A,(0E7DH)
          CP  024H
          JP	NZ,0436H
          CALL 0309H
          LD  (0E7DH),A
          CP  024H
          JP	NZ,03E6H
          LD HL,(0E7DH)
          LD  C,L
          CALL 04C4H
          JP  0433H

;     <New code fragment-----from 03E6 to 03FD ( 3FD : 1021)>
;              ORG  03E6H
L03E6:
          LD   A,(0E7DH)
          SUB  030H
          LD  (0E7DH),A
          LD  C,A
          LD  A,09H
          CP  C
          JP	NC,03FEH
          LD  BC,msg6
          CALL errorExit				; exit via error
          JP  0433H

;     <New code fragment-----from 03FE to 041B ( 41B : 1051)>
;              ORG  03FEH
L03FE:
          LD  HL,0E7AH
          LD  (HL),00H
          CALL 04ADH
L0406:
          LD   A,(0E7DH)
          CP  00H
          JP	Z,0422H
          LD  HL,0E7DH
          DEC  M
L0412:
          CALL 0481H
          RRA
          JP	NC,041CH
          JP  0412H

;     <New code fragment-----from 041C to 0421 ( 421 : 1057)>
;              ORG  041CH
L041C:
          CALL 04ADH
          JP  0406H

;     <New code fragment-----from 0422 to 0432 ( 432 : 1074)>
;              ORG  0422H
L0422:
          CALL 0481H
          RRA
          JP	NC,0433H
          LD HL,(0E79H)
          LD  C,L
          CALL 04C4H
          JP  0422H

;     <New code fragment-----from 0433 to 0435 ( 435 : 1077)>
;              ORG  0433H
L0433:
          JP  0468H

;     <New code fragment-----from 0436 to 0455 ( 455 : 1109)>
;              ORG  0436H
L0436:
          LD   A,(0E7DH)
          CP  05EH
          JP	NZ,0461H
          CALL 0309H
          SUB  061H
          LD  (0E7DH),A
          LD  C,A
          LD  A,019H
          CP  C
          JP	NC,0456H
          LD  BC,msg7
          CALL errorExit				; exit via error
          JP  045EH

;     <New code fragment-----from 0456 to 045D ( 45D : 1117)>
;              ORG  0456H
L0456:
          LD   A,(0E7DH)
          INC  A
          LD  C,A
          CALL 04C4H

;     <New code fragment-----from 045E to 0460 ( 460 : 1120)>
;              ORG  045EH
L045E:
          JP  0468H

;     <New code fragment-----from 0461 to 0467 ( 467 : 1127)>
;              ORG  0461H
L0461:
          LD HL,(0E7DH)
          LD  C,L
          CALL 04C4H

;     <New code fragment-----from 0468 to 046A ( 46A : 1130)>
;              ORG  0468H
L0468:
          JP  03A6H

;     <New code fragment-----from 046B to 047F ( 47F : 1151)>
;              ORG  046BH
L046B:
          LD   A,(0E7DH)
          SUB  0DH
          SUB  01H
          SBC  A,A
          LD  (0E7CH),A
          LD HL,(0E78H)
          LD  C,L
          CALL 04C4H
          JP  039AH

;     <New code fragment-----from 0480 to 0480 ( 480 : 1152)>
;              ORG  0480H
;L0480:
DumbRet1:
          RET

;     <New code fragment-----from 0481 to 04A9 ( 4A9 : 1193)>
;              ORG  0481H
L0481:
          LD HL,(0E7AH)
          LD  H,00H
          LD  BC,comTailTemp
          ADD  HL,BC
          LD  A,(HL)
          LD  (0E79H),A
          SUB  020H
          SUB  01H
          SBC  A,A
          PUSH AF
          LD   A,(0E79H)
          SUB  00H
          SUB  01H
          SBC  A,A
          POP  BC
          LD  C,B
          OR  C
          RRA
          JP	C,04AAH
          LD  HL,0E7AH
          INC  M
          LD  A,01H
          RET

;     <New code fragment-----from 04AA to 04AC ( 4AC : 1196)>
;              ORG  04AAH
L04AA:
          LD  A,00H
          RET

;     <New code fragment-----from 04AD to 04C2 ( 4C2 : 1218)>
;              ORG  04ADH
L04AD:
          LD HL,(0E7AH)
          LD  H,00H
          LD  BC,comTailTemp
          ADD  HL,BC
          LD  A,(HL)
          CP  020H
          JP	NZ,04C3H
          LD  HL,0E7AH
          INC  M
          JP  04ADH

;     <New code fragment-----from 04C3 to 04C3 ( 4C3 : 1219)>
;              ORG  04C3H
L04C3:
          RET

;     <New code fragment-----from 04C4 to 04FD ( 4FD : 1277)>
;              ORG  04C4H
L04C4:
          LD  HL,0E7BH
          LD  (HL),C
          LD HL,(0E76H)
          INC  HL
          LD (0E76H),HL
          LD  DE,07FFH
          CALL 0599H
          JP	NC,04DEH
          LD  BC,msg4
          CALL errorExit				; exit via error
L04DE:
          LD HL,(0E76H)
          LD  BC,0676H
          ADD  HL,BC
          LD   A,(0E7BH)
          LD  (HL),A
          LD   A,(0E78H)
          INC  A
          LD  (0E78H),A
          LD  C,A
          LD  A,07DH
          CP  C
          JP	NC,04FDH
          LD  BC,msg5
          errorExit				; exit via error
L04FD:
          RET

;     <New code fragment-----from 04FE to 055E ( 55E : 1374)>
;              ORG  04FEH
L04FE:
          LD  BC,fcbSUB
          CALL 022DH
          LD  HL,05DBH
          LD  (HL),00H
          LD  BC,fcbSUB
          CALL 025DH
          LD   A,(osStatus)
          CP  0FFH
          JP	NZ,051DH
          LD  BC,msg8
          CALL 02A7H
L051D:
          CALL 057AH
          LD  (0E7EH),A
          CP  00H
          JP	Z,0565H
          LD   A,(0E7EH)
          LD  (0080H),A					;#? COMTAILCOUNT
          LD  C,A
          LD  B,00H
          LD  HL,0081H
          ADD  HL,BC
          LD  (HL),00H
          LD HL,(0E7EH)
          LD  H,00H
          LD  BC,0082H
          ADD  HL,BC
          LD  (HL),024H
L0542:
          LD  A,00H
          LD  HL,0E7EH
          CP  M
          JP	NC,055FH
          CALL 057AH
          LD HL,(0E7EH)
          LD  H,00H
          LD  BC,0080H 					;#? COMTAILCOUNT
          ADD  HL,BC
          LD  (HL),A
          LD  HL,0E7EH
          DEC  M
          JP  0542H

;     <New code fragment-----from 055F to 0564 ( 564 : 1380)>
;              ORG  055FH
L055F:
          CALL 0378H
          JP  051DH

;     <New code fragment-----from 0565 to 0579 ( 579 : 1401)>
;              ORG  0565H
L0565:
          LD  BC,fcbSUB
          CALL 021AH
          LD   A,(osStatus)
          CP  0FFH
          JP	NZ,0579H
          LD  BC,msg9
          CALL 02A7H
L0579:
          RET

;     <New code fragment-----from 057A to 0586 ( 586 : 1414)>
;              ORG  057AH
L057A:
          LD HL,(0E76H)
          DEC  HL
          LD (0E76H),HL
          LD  BC,0676H
          ADD  HL,BC
          LD  A,(HL)
          RET

;     <New code fragment-----from 0587 to 0589 ( 589 : 1417)>
;              ORG  0587H
jpWBOOT:
          JP  WBOOT

;     <New code fragment-----from 058A to 058C ( 58C : 1420)>
;              ORG  058AH
jpBDOS1:
          JP  BDOS

;     <New code fragment-----from 058D to 058F ( 58F : 1423)>
;              ORG  058DH
jpBDOS2:
          JP  BDOS

;     <New unknown fragment-----from 0590 to 0598 ( 598 : 1432)>
;              ORG  0590H
               DS  0009H

;     <New code fragment-----from 0599 to 059F ( 59F : 1439)>
;              ORG  0599H
L0599:
          LD  A,E
          SUB  L
          LD  L,A
          LD  A,D
          SBC  A,H
          LD  H,A
          RET

;     <New unknown fragment-----from 05A0 to 05FF ( 5FF : 1535)>
;              ORG  05A0H
;			DS		27
			ORG		05B6H
;L05B6:
LineNumber:
			DB	'001 $'

			ORG	05BBH
fcbSUB:		DB		0,'$$$    .SUB'


			ORG	05DCH
;L5DC:
			DS	1						; MSB of message pointer (1F7)
;L5DD:
			DS	1						; LSB of message pointer
;L5DE:
osStatus:
			DS	1						; #?

			ORG	05DFH
;L5DF:
			DS	1						; MSB of FCB pointer (207)
;L5E0:
			DS	1						; LSB of FCB pointer



      			ORG		05EBH
;------- moveData Variables -------
movSrc:		DS		2					; Source pointer  for move
movDest:	DS		2					; Destination pointer for Move
movSize:	DS		1					; Size of the remaining move

;			ORG		05F0H
CallerSP:	DW	 0000

;L5F2:
			DS	1						; MSB of message pointer (2A7)
;L5F3:
			DS	1						; LSB of message pointer

;L5F4:
comTailTemp:
			DS		07FH

			ORG		0674H
;L0674H:
flag1:
			DB		80H					; #? value
			DS		1

;			ORG		0676H
L0676H:

			ORG		0E93H
TopOfStack:


			ORG		0E76H
L0E76H:
			DS		2
L0E78H:
			DS		1

			DS		3
L0E7CH:
			DS		1

EndOfCode:
